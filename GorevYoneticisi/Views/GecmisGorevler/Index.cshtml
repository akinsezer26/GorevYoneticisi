
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/GorevLayout.cshtml";
}

<h2>Geçmiş Gorevler</h2>

<table id="tableRead" class="table table-striped table-bordered" style="width:100%">
    <thead>
        <tr>
            <th>Görev ID</th>
            <th>Görev İsmi</th>
            <th>Başlangıç Tarihi</th>
            <th>Son Tarih</th>
            <th>Tamamlandı mı</th>
            <th></th>
        </tr>
    </thead>
</table>
<a class="btn btn-success" style="margin-bottom: 10px" onclick="PopupForm('@Url.Action("addOrEditDailyMission","DB")')"><i class="fa fa-plus"></i> Ekle </a>
<script src="~/Scripts/jquery-3.3.1.js"></script>
<script src="https://cdn.datatables.net/1.10.20/js/jquery.dataTables.min.js"></script>
<script src="~/Scripts/bootstrap.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
<script src="~/Scripts/notify.min.js"></script>
<script>
    var popUp, dataTable;
     $(document).ready(function () {
     dataTable = $('#tableRead').DataTable({
            "ajax": {
                "url": "/DB/getCompletedOrFailedMissions",
                "type": "GET",
                "datatype": "json",
            },
            "columns": [
                { "data": "GorevID" },
                { "data": "Gorev_Ismi" },
                {
                    "data": "Baslangic_Tarihi", "render": function (data) {
                        var date = new Date(Number(data.replace(/\D/g, '')));
                        var month = date.getMonth() + 1;
                        return date.getDate() + "/" + (month.toString().length > 1 ? month : "0" + month) + "/" + date.getFullYear();
                    }
                },
                {
                    "data": "Son_Tarih", "render": function (data) {
                        var date = new Date(Number(data.replace(/\D/g, '')));
                        var month = date.getMonth() + 1;
                        return date.getDate() + "/" + (month.toString().length > 1 ? month : "0" + month) + "/" + date.getFullYear();
                    }
                },
                {
                    "data": "Tamamlandi_Mi", "render": function (data) {
                        if (data == true) {
                            return "<label>Evet</label>"
                        }
                        else {
                            return "<label>Hayır</label>"
                        }
                    }
                },
                {
                    "data": "GorevID", "render": function (data) {
                        return "<a class='btn btn-default btn-sm' onclick=PopupForm('@Url.Action("addOrEditDailyMission","DB")/" + data + "')><i class='fa fa-pencil'></i> Düzenle</a><a class='btn btn-danger btn-sm' onclick=Delete(" + data + ") style='margin-left:5px' ><i class='fa fa-trash'></i> Sil</a>"
                    }
                    ,
                    "orderable": false,
                    "searchable": false,
                    "width": "150px"
                }
            ],
            "language": {
                "sDecimal": ",",
                "sEmptyTable": "Tabloda herhangi bir veri mevcut değil",
                "sInfo": "_TOTAL_ kayıttan _START_ - _END_ arasındaki kayıtlar gösteriliyor",
                "sInfoEmpty": "Kayıt yok",
                "sInfoFiltered": "(_MAX_ kayıt içerisinden bulunan)",
                "sInfoPostFix": "",
                "sInfoThousands": ".",
                "sLengthMenu": "Sayfada _MENU_ kayıt göster",
                "sLoadingRecords": "Yükleniyor...",
                "sProcessing": "İşleniyor...",
                "sSearch": "Ara:",
                "sZeroRecords": "Eşleşen kayıt bulunamadı",
                "oPaginate": {
                    "sFirst": "İlk",
                    "sLast": "Son",
                    "sNext": "Sonraki",
                    "sPrevious": "Önceki"
                },
                "oAria": {
                    "sSortAscending": ": artan sütun sıralamasını aktifleştir",
                    "sSortDescending": ": azalan sütun sıralamasını aktifleştir"
                },
                "select": {
                    "rows": {
                        "_": "%d kayıt seçildi",
                        "0": "",
                        "1": "1 kayıt seçildi"
                    }
                }
            }
     });
});
function PopupForm(url) {
    var formDiv = $('<div/>');
    $.get(url)
        .done(function (response) {
            formDiv.html(response);

            popUp = formDiv.dialog({
                autoOpen: true,
                resizable: false,
                title: 'Görev Ekle',
                height: 370,
                width: 600,
                close: function myfunction() {
                    popUp.dialog('destroy').remove();
                }
            });
        });
}
function SubmitForm(form) {

    $.validator.unobtrusive.parse(form);

    if ($(form).valid()) {
        $.ajax({
            type: "POST",
            url: form.action,
            data: $(form).serialize(),
            success: function (data) {
                if (data.success) {
                    popUp.dialog('close');
                    dataTable.ajax.reload();

                    $.notify(data.message, {
                        globalPosition: "top center",
                        className: "success"
                    })
                }
            }
        });
    }
    return false;
}
function Delete(id) {
    if (confirm('Bu kaydı silmek istediğinizden emin misiniz ?')) {
        $.ajax({
            type: "POST",
            url: '@Url.Action("deleteMission","DB")/' + id,
            success: function (data) {
                if (data.success) {
                    dataTable.ajax.reload();

                    $.notify(data.message, {
                        globalPosition: "top center",
                        className: "success"
                    })
                }
            }
        });
    }
}
</script>